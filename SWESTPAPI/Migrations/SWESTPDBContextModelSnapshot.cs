// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWESTPAPI.Data;

namespace SWESTPAPI.Migrations
{
    [DbContext(typeof(SWESTPDBContext))]
    partial class SWESTPDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SWESTPAPI.Models.AppUser", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ID")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Role");

                    b.Property<string>("VCode");

                    b.Property<string>("isVerified");

                    b.HasKey("Email");

                    b.ToTable("appUsers");
                });

            modelBuilder.Entity("SWESTPAPI.Models.Profile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Section");

                    b.Property<int>("Semester");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("SWESTPAPI.Models.Profile", b =>
                {
                    b.HasOne("SWESTPAPI.Models.AppUser", "AppUser")
                        .WithOne("Profile")
                        .HasForeignKey("SWESTPAPI.Models.Profile", "Email");
                });
#pragma warning restore 612, 618
        }
    }
}
